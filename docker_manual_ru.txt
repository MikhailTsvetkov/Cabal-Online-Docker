========================================================================
	Содержание
========================================================================

[1.0]	Описание
[1.1]	Возможности

[2.0]	Требования
[2.1]	Подготовка
[2.2]	О портах
[2.3]	Создание сервера Cabal
[2.4]	Удаление сервера Cabal

[3.0]	Добавление/настройка каналов
[3.1]	Настройка планировщика cron
[3.2]	Настройка INI-файлов
[3.3]	Бинарные файлы
[3.4]	Настройка Базы данных MSSQL
[3.5]	Важная информация о восстановлении БД
[3.6]	GlobalMgrSvr Proxy

[4.0]	Доступные команды терминала
[4.1]	Команды Docker
[4.2]	Ошибка "The same process name is already existed"

[5.0]	Отправка бэкапа на внешний сервер по протоколу FTP
[5.1]	Отправка бэкапа в папку MEGA
[5.2]	Вебсервер для лаунчера

[6.0]	Работа со службами Cabal
[6.1]	odbc.ini
[6.2]	О мультисерверах


========================================================================
[1.0]	Описание
========================================================================
Эта система управления сервером Cabal Online на основе контейнеров Docker.
Контейнер Docker представляет собой систему виртуализации,
позволяющую «упаковать» приложение со всем его окружением и зависимостями в контейнер.
Это похоже на виртуальную машину, которая НЕ резервирует ресурсы системы.
То есть, контейнер не будет потреблять ресурсов, кроме тех, что необходимы непосредственно серверу Cabal.
При этом, у нас появляется возможность запустить несколько полность изолированных
серверов Cabal и баз данных для них на одной VPS/VDS.
Это может быть полезно, если вы имеете несколько серверов Cabal или хотите запустить
дополнительный сервер для тестов. При этом у них будет один IP-адрес и разные порты.
Естесственно, для MSSQL больше не нужен Windows. Базы данных также будут запущены в контейнерах на основном сервере.


========================================================================
[1.1]	Возможности
========================================================================
Высокий аптайм - при правильной конфигурации, сервер может работать без рестартов месяцами.
Базовая ОС для сервера - Debian 11.
Контейнер MSSQL - Ubuntu, MSSQL 2022.
Запуск нескольких серверов Cabal на одной VPS/VDS.
Развертывание нового сервера за 5 минут.
Возможность использовать бэкап, сгенерированный этой сборкой, для развертывания нового, полностью настроенного сервера.
Все файлы (конфиги, базы данных, логи, бинарники) находятся в одной директории на сервере.
Автоматическое создание/восстановление из бэкапа баз данных прямо в терминале.
Авторестарт упавших служб.
Защита от крашера каналов.
Автоочистка .core и .trc файлов.
Контроль статуса GlobalMgrSvr - каналы больше не будут падать каждый день.
Ротация логов предотвращяет переполнение дискового пространства во время DDoS-атаки и прочих критических сбоях.
Автоматическая очистка списка онлайна (персонажей, аккаунтов) при рестарте сервера.
Автоматическое сжатие логов БД (для вашего сервера 80Гб дискового пространства будет более чем достаточно).
Автоматический бэкап всех данных сервера (базы данных, файлы сервера, скрипты, планировщик).
Возможность автоматической отправки бэкапов на другой сервер по протоколу FTP.
Возможность автоматической отправки бэкапов в папку на MEGA.
GlobalMgrSvr прокси - позволяет использовать различные Items/Mobs/Warp для разных каналов.
Автоматическое применение еженедельной награды за Флаговое ТГ.
Возможность установить отдельные настройки для обычного ТГ и для Флага (награды, требуемые очки, продолжительность).
Запуск войны по расписанию.


========================================================================
[2.0]	Требования
========================================================================
ОС Debian 11
Параметры производительности могут отличаться для разных серверов, в зависимости от количества каналов и показателей онлайна.
В среднем, для живого сервера достаточно 4 ядра CPU, 8-10 Гб RAM, 40 Гб дискового пространства.
Если вы планируете также запускать тестовый сервер, то рекомендуются следующие параметры:
6-8 ядер CPU, 12-16 Гб RAM, 100 Гб дискового пространства.
32 Гб RAM наверняка будет достаточно для 2 живых серверов и 1-2 тестовых серверов.
Текущуюю нагрузку на сервер вы можете посмотреть, введя в терминал команду htop.
Если нагрузка на процессор превышает 90% или оперативная память заполнена, рекомендуется апгрейд сервера.
В графике RAM желтым цветом отображается кэш. Не учитывайте кэшированные данные, их размер регулируется автоматически
и может занимать до 90% RAM - это нормально.
Свободное место на диске вы можете проверить командой "df -h"

Есть нюанс с использованием выделенных серверов (VDS). Хостинг компании часто ставят на эти серверы
уставшее оборудование, что приводит к частым сбоям по неочевидным причинам.
Поэтому предпочтительнее ипользовать VPS.


========================================================================
[2.1]	Подготовка
========================================================================
Откройте файл /home/_server_data/new_server.conf
Отредактируйте его следующим образом:

	srv_prefix='main'
где main - это уникальный идентификатор вашего сервера.
Здесь вы можете ипользовать любое имя, которое вам будет удобно ассоциировать с вашим сервером.
Например, "test", "server2", "pve" и тд.
Не используйте цифровые идентификаторы (1,2,3 и тд).

	mssql_port=''
	mssql_user=''
	mssql_pass=''
Укажите параметры установки базы данных.
Вы можете выбрать порт и имя пользователя, отличные от параметров по умолчанию, это повысит безопасность вашего сервера.
Пароль для базы данных должен быть сложным и отвечать всем требования Microsoft:
https://docs.microsoft.com/en-us/sql/relational-databases/security/password-policy?view=sql-server-ver15
Если вы введете простой пароль, то не сможете подключиться к базе данных, и создание сервера завершится с ошибкой.

	autostart=1
Параметр autostart отвечает за поведение контейнеров Docker после ребута системы.
Для основного сервера установите этот параметр равным 1.
Для тестовых серверов вы можете установить autostart=0, чтобы тестовая БД не использовала RAM.
Чтобы выключить неиспользуемые контейнеры, используйте команды:
	docker stop cabal_test
	docker stop sql_test
где test - id вашего сервера
Снова включить контейнеры вы можете так:
	docker start sql_test
	docker start cabal_test
Обратите внимание на очередность остановки и запуска контейнеров sql и cabal.
Статус всех контейнеров и используемые порты вы можете проверить командой:
	docker ps -a
	
Параметр 'autostart' отвечает за автозапуск только контейнеров. Сам сервер Cabal автоматически не запустится.

	backup_file='/root/cabal_default_backup.tar.gz'
Путь к файлу бэкапа, из которого будут получены файлы сервера и баз данных.
По умолчанию для создания сервера используется файл cabal_default_backup.tar.gz с чистым 8 эпизодом.
Вы можете изменить путь к файлу бэкапа. Имя файла также не имеет значения.
В качестве бэкапа здесь вы также можете использовать бэкап, сгенерированный этой сборкой (версии для Debian 11).
В результате вы получите точную копию сервера из бэкапа с измененными портами.

	WorldSvr settings
Это настройка ОП и Т-очков, которые будут установлены при создании сервера.
Если вы хотите оставить настройки по умолчанию (для нового сервера) или использовать
настройки из вашего бэкапа (для сервера - копии), установите эти параметры равными 0.

###Если вы забыли установить эти настройки (или пропустите этот раздел).###
	Изменение этих параметров вручную может быть утомительным, поэтому, если вам необходимо поменять их в процессе работы,
	вы можете использовать эти команды:
	###Отредактируйте команды перед их выполнением!!!###
		sed -i -e "s/^KeepDPTime=.*/KeepDPTime=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^MaxDPLimit=.*/MaxDPLimit=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^MaxPoint=.*/MaxPoint=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^BasisPoint=.*/BasisPoint=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^UpdateSpan=.*/UpdateSpan=999999/g" /home/data_main/cabal/WorldSvr_*
	где 999999 - ваше значение для параметра,
	data_main - директория вашего сервера.


========================================================================
[2.2]	О портах
========================================================================
Во время создания сервера Cabal, для контейнера устанавливается диапазон из 100 открытых портов.
По умолчанию порты сервера Cabal, доступные извне, начинаются с 35001.
На каждый сервер выделяется диапазон из 100 портов (например, 35001-35100). Другие порты будут недоступны извне.
Если порт 35001 уже используется каким-то из контейнеров, будет использован следующий диапазон (35101-35200 и тд).
Изменить диапазон открытых портов после создания сервера нельзя. Вам нужно будет удалить сервер и создать его заново.
Поскольку вы можете использовать сгенерированный бэкап вашего сервера для создания нового сервера, это не займет много времени - те же 5-10 минут.

После того, как вы установите обновление на свой сервер, у вас может появиться желание изменить порт для LoginSvr в LoginSvr_01.ini.
По умолчанию порт LoginSvr=xxx03. Если вы посмотрите на список ниже, то увидите, что порты xxx04-xxx10 свободны.
Это идеальный диапазон для вашего LoginSvr, и я рекомендую использовать только его, чтобы избежать путаницы и конфликтов.

Во время создания сервера IP-адрес вашего сервера и порты для служб будут автоматически настроены в ваших ini-файлах.

###Для опытных пользователей (вы можете сразу перейти к следующему разделу).###
Если вам нужны определенные порты для сервера Cabal,
вам нужно внести изменения в файл /home/_server_data/sh/scripts/server_create.sh
cabal_port=*****
Вы можете выбрать порт только из диапазона 30000-40000.

###Важно!###
Для изменения порта по умолчанию нет объективных причин (злоумышленник все равно сможет узнать, какие порты вы используете).
При этом, если вы будете использовать порты в диапазоне 38000-39000, локальные порты (например порт DBAgent_01)
могут стать доступными извне, что является критической угрозой безопасности.
Я настоятельно не рекомендую менять эти диапазоны.

Извне должны быть доступны порты для следующих служб:
AgentShop (по умолчанию = $cabal_port)
ChatNode (по умолчанию = $cabal_port+1)
LoginSvr (по умолчанию = $cabal_port+2)
WorldSvr (по умолчанию = $cabal_port+10)
AgentShop2 (по умолчанию = $cabal_port+50)
ChatNode2 (по умолчанию = $cabal_port+51)
WorldSvr2 (по умолчанию = $cabal_port+60)


========================================================================
[2.3]	Создание сервера Cabal
========================================================================
После того, как вы внесете все необходимые настройки, выполните команду:
	server_create

В процессе создания сервера будут выполнены следующие действия:
	Создана рабочая директория сервера /home/data_main (где main - id вашего сервера).
	Создан и запущен контейнер mssql с идентификатором sql_main.
	Создан и запущен контейнер Cabal с идентификатором cabal_main.
	Обновлена конфигурация файлов Cabal (IP-адрес, порты, пользователь/пароль MSSQL, ОП, Т-очки).
	Созданы и восстановлены из бэкапа базы данных.
	Ссылка на файл планировщика cron добавлена в директорию /etc/cron.d

По окончании ваш сервер с одним основным каналом и двумя каналами ТГ готов к запуску.
Команда для запуска сервера
	cabal_start main
где main - id вашего сервера

Вы можете заметить, что автобэкап сейчас отключен. Это сделано для того, чтобы вы могли без проблем добавить бэкапы своей БД в процессе настройки. Затем вы включите автобэкап.


========================================================================
[2.4]	Удаление сервера Cabal
========================================================================
Если вы решили удалить ненужный или неправильно настроенный сервер, выполните команду:
	server_remove main
где main - id вашего сервера
Вам будет предложено создать свежий бэкап БД на случай, если вы захотите восстановить этот сервер позже.
Если вы уверены, что вам не нужно обновление бэкапа этой БД, введите N.
Затем будет создан бэкап всех файлов сервера и баз данных.
Бэкапы баз данных последней версии будут сохранены в любом случае, независмо от того, что вы ответили на вопрос о свежем бэкапе.
Бэкап будет сохранен в директории /home/_server_backups/removed_servers.
На основе этого бэкапа вы тоже можете создать новый сервер.


========================================================================
[3.0]	Добавление/настройка каналов
========================================================================
По умолчанию добавлены каналы 1 (основной) и 15,16 (ТГ).
Также добавлен канал для тестов - 11.
Для того, чтобы добавить канал, добавьте имя службы (WorldSvr_XX_XX) в файлы структуры:
	/home/data_main/cabal_structure/channels_list (список основных каналов, если вы добавляете обычный канал)
	/home/data_main/cabal_structure/server_list (список всех служб сервера)
	/home/data_main/cabal_structure/world_list (список служб сервера, запущенных постоянно)
	/home/data_main/cabal_structure/war_list (список каналов ТГ, если вы добавляете канал ТГ)
	
	/home/data_main/cabal/GlobalMgrSvr.ini
Доступные типы каналов в GlobalMgrSvr.ini:
1024 = Торговля (зеленый).
0 = Обычный (зеленый).
1 = ПК (белый).
4 = Премиум (зеленый).
5 = Премиум ПК (белый).
8 = Война.
12 = Премиум Война.
32 = Технический канал (добавьте IP-адрес админа в поле AffiliatedCorpIP в файле LoginSvr.ini. Список IP-адресов разделен ";").
16781392 = Война наций (Warmap 1). По умолчанию для уровней 52-79.
33558608 = Война наций (Warmap 2). По умолчанию для уровней 80-109.
50335824 = Война наций (Warmap 3). По умолчанию для уровней 110-139.
67113040 = Война наций (Warmap 4). По умолчанию для уровней 140-169.
83890256 = Война наций (Warmap 5). По умолчанию для уровней 170-190.

При необходимости, внесите изменения в файлы WorldSvr_XX_XX.ini.
WorldSvr_XX_XX.ini-файлы добавлены для каналов 1-16, но вы можете добавить дополнительные конфиги для каналов 17+.
Без дополнительных изменений в настройках служб (см. пункт [6.0]) возможно добавить каналы 1-30.

После применения всех настроек, выполните рестарт сервера:
	cabal_restart main


========================================================================
[3.1]	Настройка планировщика cron
========================================================================
Файл с настройками crontab находится в директории /home/cabal_structure.
Открыть этот файл вы также можете, используя ссылку на него в директории /etc/cron.d (там имя файла - cabal_main_cron).
Вы можете раскомментировть или закомментировать строки, используя символ #.
В первой строке указан id вашего сервера - не редактируйте эту строку. Она нужна для автоматизации.
Доступные расписания:
	Расписание войны наций.
	Установка параметров битвы за флаг. Выполняется за 5 минут до начала войны.
	Установка дефолтных параметров войны. Выполняется через 5 минут после окончания битвы за флаг.
	Установка еженедельной награды нации по итогам битвы за флаг. Выполняется через 10 минут после окончания битвы за флаг.
	Авторестарт GlobalMgrSvr. Предотвращение сбоев каналов, вызванного остановкой GlobalMgrSvr. Выполняется ежедневно в 3:35 ночи.
	Ротация логов. Выпоняется каждую минуту. Вы можете указать максимальный размер лога в мегабайтах.
	Очистка мусора (.core, .trc). Выполняется каждые 5 минут.
	Сжатие логов БД, если размер лога Server01 достиг установленного лимита 10 Гб. Выполняется каждый день в 4:45 ночи.
	Проверка статуса служб Cabal и их перезапуск в случае сбоя*. Выпоняется каждую минуту.
		* Это дублирующая система, и мне нужно больше тестов, чтобы понять, нужна ли она в текущей конфигурации сервера.
	Автобэкап. Выполняется 2 раза в месяц, 2 раза в день и каждый час. Бэкапы сохраняются в директории /home/_server_backups.

Если необходимо, вы можете добавить расписание старта/остановки для ивент-каналов:
#### Forcecalibur
00 16 * * 7 root /bin/bash /usr/bin/chan 6 main restart -dt
00 17 * * 7 root /bin/bash /usr/bin/chan 6 main stop -dt

Обратите внимание, что последняя строка в файле cron обязательно должна быть пустой.
В коде выше канал 6 будет запускаться каждое воскресенье в 16:00 и отключаться в 17:00.
Подробнее о команде "chan" смотрите в пункте [4.0].


========================================================================
[3.2]	Настройка INI-файлов
========================================================================
Файлы INI для сервера Cabal находятся в директории /home/data_main/cabal.
IP-адрес и порты устанавливаются автоматически во время создания сервера.
Также перед созданием сервера вы можете задать конфигурацию для ОП и Т-очков.

###Важно!###
Некоторый функционал этой сборки зависит от структуры INI-файлов.
Не заменяйте их своими старыми файлами! Вносите изменения в уже существующие файлы.
Параметры производительности уже установлены на оптимальные значения.
Файл Common.ini вы можете заменить.


========================================================================
[3.3]	Бинарные файлы
========================================================================
Бинарные файлы для сервера Cabal находятся в директории /home/data_main/cabal_bin.
Вы можете заменить их своими бинарниками. Для этого, просто перенесите их в эту директорию.

Обратите внимание, что если перед заменой вы удалили существующий файл с сервера (или переименовали его),
то вам необходимо заново установить разрешения для этого файла. Это можно сделать, выполнив команду в терминале:
	chmod 0700 /home/data_main/cabal_bin/WorldSvr
где WorldSvr - ваш бинарник.
Или вы можете сделать это из WinSCP.
Нажмите ПКМ на файл, выберите "Properties", введите 0700 в поле "Octal".


========================================================================
[3.4]	Настройка Базы данных MSSQL
========================================================================
Для базы данных автоматизированы следующие операции:
	Создание баз данных
	Восстановление БД из бэкапов
	Бэкап баз данных
	Сброс списка онлайна (SET [Login]=0)
	Применение еженедельной награды по итогам Битвы за флаг
	Сжатие логов БД
Все эти действия полностью автоматизированы.
Если вы создаете сервер впервые, то будут созданы только дефолтные базы данных для 8 эпизода.
Если вы хотите добавить дополнительную БД, после создания сервера выполните команду:
	cabal_db create main AnderSystems
где main - id вашего сервера и AnderSystems - ваша бд.

Обратите внимание, что имя файла бэкапа для бд регистрозависимо.
Например, бд NetcafeBilling:
Netcafebilling.bak - неправильно
NetcafeBilling.BAK - неправильно
NetcafeBilling.bak - правильно

Бэкапы ваших Баз данных хранятся в директории /home/data_main/mssql/backup
В директории /home/data_main/mssql/prev_backups находятся предыдущие бэкапы бд, скопированные туда перед текущим бэкапом.

После того, как вы создали сервер и добавили все необходимые базы данных, вы можете восстановить ваши базы данных из ваших бэкапов.
Для этого добавьте файлы бэкапов в директорию /home/data_main/mssql/backup.
Помните, что имя файла должно полностью совпадать с именем бд (с учетом строчных и заглавных букв).
Список ваших баз данных хранится в файле /home/data_main/cabal_structure/db_list (не нужно редактировать этот файл).
После того, как вы подготовили бэкапы, выполните команду:
	restore_dbs main
где main - id вашего сервера.

Когда восстановление бд завершено, вы можете включить автобэкап:
	autobackup main on


========================================================================
[3.5]	Важная информация о восстановлении БД
========================================================================
Настраивая планировщик cron вы могли заметить, что автоматический бэкап выполняется в конце часа.

###Важно!###
Пока выполняется бэкап базы данных, нельзя производить восстановление базы данных из бэкапа!
Это действие сломает вашу БД. В этом случае вам нужно удалить проблемную БД, создать ее заново и восстановить из бэкапа.
Чтобы избежать этой проблемы, не пытайтесь восстановить БД из бэкапа в последние 15 минут часа.
Также вы можете отключить автобэкап, закомментировав соответствующие строки в crontab, но, по понятным причинам, не рекомендуется этого делать.
Напомню, что по умолчанию бэкапы создаются каждый час, и вы можете взять бэкап для восстановления из директории /home/_server_backups/hourly.


========================================================================
[3.6]	GlobalMgrSvr Proxy
========================================================================
Данная функция необходима в том случае, если вы хотите использовать различные файлы
(а может быть и директории для них) Item.scp, Mobs.scp, Warp.scp.
Например, вы хотите сделать хардкор-канал с усиленными мобами.
Описанные выше файлы нельзя поменять в Common.ini, поэтому нам на помощь приходит прокси.

Сначала вам необходимо внести настройки в файл /home/data_main/cabal_structure/proxy_list
Здесь вы можете указать особые порты для GlobalMgrSvr.
Можно использовать один и тот же порт для нескольких каналов (например, один и тот же порт для всех каналов ТГ).
Рекомендуемый диапазон 23001-23100.
В остальных столбцах укажите специальные имена файлов.
Установите этот особый порт в файле WorldSvr_XX_XX.ini в разделе [GlobalMgrSvr].
Например:
[ProxyId]	gmsPort	Item	Mobs	Warp
1	23001	Data/ItemNew.scp	Data/MobsNew.scp	Data/WarpNew.scp
2	23002	Data/ItemA.scp	Data/MobsA.scp	Data/WarpA.scp
3	23003	Data/ItemB.scp	Data/MobsB.scp	Data/WarpB.scp
4	23004	Data/ItemC.scp	Data/MobsC.scp	Data/WarpC.scp
5	23005	Data/ItemD.scp	Data/MobsD.scp	Data/WarpD.scp
6	23006	Data/ItemE.scp	Data/MobsE.scp	Data/WarpE.scp
7	23007	Data/ItemF.scp	Data/MobsF.scp	Data/WarpF.scp
8	23008	Data/ItemG.scp	Data/MobsG.scp	Data/WarpG.scp
9	23009	Data/ItemH.scp	Data/MobsH.scp	Data/WarpH.scp
10	23010	Data/ItemI.scp	Data/MobsI.scp	Data/WarpI.scp

WorldSvr_01_01.ini (default):
    [GlobalMgrSvr]
    Port=23991
    Addr=127.0.0.1

WorldSvr_01_04.ini (special 1):
    [GlobalMgrSvr]
    Port=23001
    Addr=127.0.0.1

WorldSvr_01_05.ini (special 1):
    [GlobalMgrSvr]
    Port=23001
    Addr=127.0.0.1

WorldSvr_01_16.ini (special 2):
    [GlobalMgrSvr]
    Port=23002
    Addr=127.0.0.1

Для того, чтобы применить эти настройки, выполните команду
	gms_proxy_reexec main
Затем выполните рестарт каналов или сервера.


========================================================================
[4.0]	Доступные команды терминала
========================================================================
Для команд, предназаченных для управления сервисами Cabal, нужно добавлять ID сервера.
Например:
	cabal_start main
где main - ID вашего сервера.

Управление всеми службами Cabal.
Список служб для статуса/выключения в файле /home/data_main/cabal_structure/server_list
Список служб для старта в файле /home/data_main/cabal_structure/world_list
	cabal_start|cabal_stop|cabal_restart|cabal_reload|cabal_status

Управление основными каналами.
Список каналов в файле /home/data_main/cabal_structure/channels_list
	channels_start|channels_stop|channels_restart|channels_reload|channels_status

Управление каналами войны.
Список каналов в файле /home/data_main/cabal_structure/war_list
	war_start|war_stop|war_restart|war_reload|war_status

Управление админ-каналом.
Список каналов в файле /home/data_main/cabal_structure/tech_channel
	tech_start|tech_stop|tech_restart|tech_reload|tech_status

Управление отдельным каналом.
	chan 1 main start|stop|restart|reload

Управление службой LoginSvr_01. Позволяет перезапустить службу, когда необходимо изменить Client version и Magickey.
	login_start|login_stop|login_restart|login_reload|login_status

Управление службой EventMgrSvr. Позволяет перезапустить службу, чтобы обновить конфигирацию ивентов, ивент шопы и тд.
	eventmgr_start|eventmgr_stop|eventmgr_restart|eventmgr_reload|eventmgr_status

Управление службой AgentShop_01. Позволяет перезапустить службу, чтобы обновить конфигирацию аукциона.
	ashop_start|ashop_stop|ashop_restart|ashop_reload|ashop_status

Создание бэкапа. Будут сохранены скрипты, все файлы конфигураций Cabal, свежий бэкап БД.
Бэкап будет сохранен в директории /home/_server_backups/manual
Создание бэкапа конкретного сервера.
	create_backup main
Создание полного бэкапа, включающего в себя файлы всех имеющихся серверов.
	create_backup -f
	
Бэкап базы данных. Файлы бэкапов в директории /home/data_main/mssql/backup будут перезаписаны.
Архив с бэкапами БД будет сохранен в директории /home/_server_backups
	backup_dbs main
Параметр -s отменяет сохранение архива с бэкапами.
Бэкапы будут сохранены только в директории /home/data_main/mssql/backup
	backup_dbs main -s

Создает базы данных для сервера Cabal.
	create_dbs main
Список баз данных будет получен из файла /home/data_main/cabal_structure/db_list.
Если файл db_list не существует, базы данных будут созданы из списка файлов в директории /home/data_main/mssql/backup.

Восстанавливает базы данных из бэкапов в директории /home/data_main/mssql/backup
!!!Важно!!! См. пункт [3.5]!
	restore_dbs main

Управление отдельной базой данных.
	cabal_db create|remove|restore|backup|shrink Server_id DB_name
Например
	cabal_db create main Cabalist

Установка IP-адреса в файлах WorldSvr_XX_XX. IP-адрес будет заменен для всех серверов.
	world_set_ip 1.1.1.1

Изменяет юзера и пароль MSSQL в файлах *DBAgent*.ini.
НЕ МЕНЯЕТ юзера/пароль в БД! Используйте для этого SSMS.
	set_sql_access main SA PWD

Устанавливает настройки для дефолтной/флаговой войны из конфигов в директории /home/data_main/cabal_war
Обычно выполняется по расписанию.
	set_war_default main
	set_war_flag main

Создает новый сервер Cabal. См. пункт [2.3]. Настройки в файле /home/_server_data/new_server.conf
	server_create

Удаляет сервер main. См. пункт [2.4]. В процессе будет создан бэкап этого сервера.
	server_remove main

Перезапускает службы GMS proxy с новыми настройками. См. пункт [3.6].
	gms_proxy_reexec

Сжимает логи БД.
Обычно выполняется автоматически.
	shrink_dbs main

Настройка автобэкапа
	autobackup main on|off

Открывает диспетчер процессов и нагрузки сервера.
	htop

Файловый менеджер на случай отсутствия доступа к WinSCP.
	mc

Свободное место на диске.
	df -h


========================================================================
[4.1]	Команды Docker
========================================================================
Управление контейнерами.
	docker start|stop|restart sql_test|sql_main
	docker start|stop|restart cabal_test|cabal_main
	
Например, docker restart cabal_main

Для каждого сервера Cabal создается по 2 контейнера - SQL и CABAL (например, sql_main и cabal_main).
Рестарт контейнера равнозначен полному ребуту системы, если бы вы использовали обычный сервер.
Контейнер sql всегда должен быть запущен ДО запуска контейнера cabal.
Если контейнер sql остановлен, контейнер cabal не запустится.

Статус контейнеров.
	docker ps -a

Размер контейнеров на диске.
	docker ps -s

Использование ресурсов.
	docker stats


========================================================================
[4.2]	Ошибка "The same process name is already existed"
========================================================================
Это ошибка иногда появляется в логе канала после критического сбоя.
Теперь, чтобы восстановить канал, не нужно делать полный ребут.
Достаточно перезапустить контейнер cabal.
	docker restart cabal_main


========================================================================
[5.0]	Отправка бэкапа на внешний сервер по протоколу FTP
========================================================================
Если у вас есть сервер для бэкапов, вам необходимо заполнить файл /home/_server_data/ftp.conf
Бэкапы будут автоматически отправляться на ваш резервный сервер.


========================================================================
[5.1]	Отправка бэкапа в папку MEGA
========================================================================
MEGA - это доступный бесплатный способ обеспечить сохранность ваших бэкапов в случае форс-мажора.
Особенно, если вы зарегистрированы там давно и имеете 50 Гб дискового пространства на своем аккаунте.

Настройка синхронизации файлов с MEGA выполняется в 3 простых действия.
1. Создайте папку, в которой будут храниться ваши бэкапы, в своем аккаунте MEGA.
2. Залогиньтесь в терминале, используя учетные данные MEGA
	mega-login example@gmail.com Your-Mega-Password
Затем очистите историю терминала, чтобы никто не увидел ваш пароль.
	history -c
Имейте ввиду, что после каждого ребута системы, вам нужно будет логиниться заново, чтобы включить синхронизацию.
3. Включите синхронизацию для директории /home/_server_backups
	mega-sync /home/_server_backups/ /YourMegaFolderName/

Также я рекомендую проверить Настройки -> Управление файлами -> Версии файлов.
Сохранение множества старых версий файлов может значительно увеличить расход свободного места в MEGA.
Используйте такие настройки, которые вы считаете оптимальными, в зависимости от размера ваших бэкапов и доступного места на MEGA.


========================================================================
[5.2]	Вебсервер для лаунчера
========================================================================
Возможно вы захотите разместить свои обновления для лаунчера на сервере.
Для этого вам необходимо установить веб сервер Apache2.
Для этого предусмотрена команда webserver.

Установка веб сервера.
	webserver install

Добавление домена
	webserver add launcher.testdomain.com
где launcher.testdomain.com - домен для вашего лаунчера.
Я рекомендую всегда использовать поддомен для лаунчера (launcher.testdomain.com),
а не домен первого уровня (testdomain.com).
Когда домен добавлен, вы можете добавить файлы лаунчера в директорию /home/web_domains/launcher.testdomain.com/html
###Важно!!!###
Бэкап файлов домена не выполняется из-за возможного большого объема файлов!
Храните копии файлов лаунчера у себя на ПК!

Удаление домена
	webserver remove launcher.testdomain.com
Директория /home/web_domains/launcher.testdomain.com будет удалена!
Не забудьте сохранить важные файлы!

Управление веб сервером.
	webserver start|stop|restart|reload|status

Автозапуск веб сервера после ребута.
	webserver enable|disable

Удаление веб сервера.
	webserver uninstall


========================================================================
[6.0]	Работа со службами Cabal
========================================================================
Файлы конфигурации служб сервера Cabal находятся в директории /home/data_main/cabal_scripts/cabal_services
Файл cabal_common.conf - настройки для основных служб сервера
Файл cabal_proxy.conf - настройки для служб GMS Proxy
Файлы cabal_server*.conf - настройки для служб, которые могут запускаться под разными номерами (каналы, ChatNode и тд).

Наличие конфигураций cabal_server* подразумевает, что вы можете настроить здесь мультисервер.
Но я не осуществляю поддержку по мультисерверному функционалу, вы можете попробовать сделать это самостоятельно.
См. пункт [6.2].

[program:DBAgent_01]									-	Имя службы
directory=/etc/cabal_etc/core/							-	Рабочая директория
command=/bin/bash -c 'exec /usr/bin/DBAgent_01 -l -c'	-	Команда запуска службы
user=root												-	Пользователь, под которым будет запущена служба
autostart=false											-	Автозапуск при старте контейнера.
															Для этой функции требуются дополнительные настройки. Оставьте false.
autorestart=unexpected									-	Авторестарт службы после сбоя.
startsecs=3												-	Время ожидания запуска службы.
															Если за это время служба не запустилась, будет предпринята попытка перезапуска.
Вы также можете добавить:
startretries=3											-	Количество попыток перезапуска. По умолчанию - 3.

После изменения этих настроек вам необходимо перезапустить контейнер cabal:
	docker restart cabal_main


========================================================================
[6.1]	odbc.ini
========================================================================
Файлы odbc находятся в директории /home/data_main/cabal_scripts/odbc
Порт в этих конфигах всегда должен быть 1433!
В большинстве случаев вам не нужно ничего там менять.


========================================================================
[6.2]	О мультисерверах
========================================================================
Мультисервер - это сервер, позволяющий подключиться к нескольким серверам Cabal через один клиент
(меню выбора сервера, Меркурий/Венера).

У данной системы есть частичная поддержка мультисерверов.
Это значит, что для этого имеются некоторые инструменты, но вы можете использовать их на свой страх и риск.
Я не буду ничего добавлять дополнительно, давать разъяснения, решать проблемы, связанные с мультисерверами.

Итак, что с этим можно сделать.
Если вы хотите создать мультисервер, вы должны ознакомиться с соответствующими постами на RageZone, чтобы понимать, о чем идет речь.
Для основных служб и служб первого сервера используются первые 50 портов из 100 имеющихся.
Следующие 50 портов вы можете использовать для второго сервера (см. пункт [2.2]).
Также вам необходимо добавить соответствующие INI-файлы в директории /home/data_main/cabal
Конфигурация для служб второго сервера уже создана, но вы можете проверить/отредактировать конфиги (см. пункт [6.0]).
Для того, чтобы управлять службами только одного конкретного сервера, вам нужно добавить номер этого сервера к команде.
Например
	channels_restart main 2
перезапустит каналы только второго сервера.
Эта возможность добавлена для большинства существующих команд.
ID сервера определяется по имени службы (например, AgentShop_02, WorldSvr_02_01)

Кроме того, вам нужно будет проверить и отредактировать скрипты в директориях
	/home/_server_data/sql
с учетом того, что у вас есть дополнительные базы данных.

Еще раз напоминаю, что я не оказываю никакой поддержки по мультисерверам.
