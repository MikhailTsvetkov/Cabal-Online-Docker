========================================================================
Table of contents
========================================================================

[1.0]	Description
[1.1]	Features

[2.0]	Requirements
[2.1]	Preparation
[2.2]	About ports
[2.3]	Creating a Cabal Server
[2.4]	Removing Cabal server

[3.0]	Adding/Setting Channels
[3.1]	Setting up the cron scheduler
[3.2]	Configuring INI files
[3.3]	Binaries
[3.4]	Configuring the MSSQL Database
[3.5]	Important information about restoring the database
[3.6]	GlobalMgrSvr Proxy

[4.0]	Available terminal commands
[4.1]	Docker Commands
[4.2]	"The same process name is already existed" error

[5.0]	Sending a backup to an external server via FTP
[5.1]	Sending backup to MEGA folder
[5.2]	Web server for launcher

[6.0]	Working with Cabal Services
[6.1]	odbc.ini
[6.2]	About multiservers


========================================================================
[1.0]	Description
========================================================================
This Cabal Online server management system is based on Docker containers.
Docker container is a virtualization system, which allows you to "pack" the application
with all its environment and dependencies into a container.
It's like a virtual machine that does NOT reserve system resources.
That is, the container will not consume resources other than those needed directly by the Cabal server.
At the same time, we have the opportunity to run several completely isolated
Cabal servers and databases for them on one VPS/VDS.
This can be useful if you have multiple Cabal servers or want to run additional server for tests.
In this case, they will have the same IP address and different ports.
Naturally, MSSQL no longer needs Windows. The databases will also run in containers on the main server.


========================================================================
[1.1]	Features
========================================================================
High uptime - with the right configuration, the server can work without restarts for months.
The base OS for the server is Debian 11.
MSSQL Container - Ubuntu, MSSQL 2022.
Running multiple Cabal servers on one VPS/VDS.
Deploying a new server in 5 minutes.
The ability to use the backup generated by this build to deploy a new, fully configured server.
All files (configs, databases, logs, binaries) are located in the same directory on the server.
Automatic creation/restoration of database backups right in the terminal.
Auto-restart of crashed services.
Channel crash protection.
Auto cleanup of .core and .trc files.
GlobalMgrSvr status control - channels will no longer drop every day.
Log rotation prevents overflow of disk space during DDoS attacks and other critical failures.
Automatic cleaning of the online list (characters, accounts) when the server is restarted.
Automatic compression of database logs (for your server, 80 GB of disk space will be more than enough).
Automatic backup of all server data (databases, server files, scripts, scheduler).
Ability to automatically send backups to another server via FTP.
Ability to automatically send backups to a folder on MEGA.
GlobalMgrSvr proxy - allows you to use different Items/Mobs/Warp for different channels.
Automatic application of the weekly reward for Flag TG.
Ability to set separate settings for the regular TG and for the Flag (rewards, required points, duration).
Starting the war on schedule.


========================================================================
[2.0]	Requirements
========================================================================
OS Debian 11
Performance parameters may differ for different servers, depending on the number of channels and online indicators.
On average, 4 CPU cores, 8-10 GB of RAM, 40 GB of disk space are enough for a live server.
If you plan to also run a test server, the following options are recommended:
6-8 CPU cores, 12-16 GB RAM, 100 GB disk space.
32 GB of RAM will probably be enough for 2 live servers and 1-2 test servers.
You can view the current load on the server by entering the htop command in the terminal.
If the CPU load exceeds 90% or the RAM is full, a server upgrade is recommended.
In the RAM graph, the cache is shown in yellow. Ignore cached data, their size is adjusted automatically
and can take up to 90% of RAM - this is normal.
You can check free disk space with the command "df -h"

There is a nuance with the use of dedicated servers (VDS). Hosting companies often put on these servers
tired hardware, which leads to frequent failures for non-obvious reasons.
Therefore, it is preferable to use VPS.


========================================================================
[2.1]	Preparation
========================================================================
Open file /home/_server_data/new_server.conf
Edit it like this:

	srv_prefix='main'
where main is your server's unique ID.
Here you can use any name that is convenient for you to associate with your server.
For example, "test", "server2", "pve" and so on.
Do not use digital identifiers (1,2,3, etc.).

	mssql_port=''
	mssql_user=''
	mssql_pass=''
Specify database installation options.
You can choose a port and username other than the default settings, this will increase the security of your server.
The password for the database must be complex and meet all Microsoft requirements:
https://docs.microsoft.com/en-us/sql/relational-databases/security/password-policy?view=sql-server-ver15
If you enter a simple password, you will not be able to connect to the database and server creation will fail.

	autostart=1
The autostart parameter is responsible for the behavior of Docker containers after a system reboot.
For the primary server, set this parameter to 1.
For test servers, you can set autostart=0 to make the test database not use RAM.
To turn off unused containers, use the commands:
	docker stop cabal_test
	docker stop sql_test
where test is your server id
You can start containers again like this:
	docker start sql_test
	docker start cabal_test
Pay attention to the order in which the sql and cabal containers are stopped and started.
You can check the status of all containers and the ports used with the command:
	docker ps -a

The 'autostart' parameter is responsible for autostarting only containers. The Cabal server itself will not start automatically.

	backup_file='/root/cabal_default_backup.tar.gz'
Path to the backup file from which the server and database files will be obtained.
By default, the cabal_default_backup.tar.gz file is used to create the server with a clean episode 8.
You can change the path to the backup file. The filename doesn't matter either.
As a backup here, you can also use the backup generated by this build (version for Debian 11).
As a result, you will receive an exact copy of the server from the backup with changed ports.

	WorldSvr settings
This is the DP and T-point setting that will be set when the server is created.
If you want to leave the default settings (for a new server) or use
settings from your backup (for the server - copies), set these parameters to 0.

###If you forgot to set these preferences (or skip this section).###
	Changing these settings manually can be tedious, so if you need to change them on the fly,
	you can use these commands:
	###Edit commands before executing them!!!###
		sed -i -e "s/^KeepDPTime=.*/KeepDPTime=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^MaxDPLimit=.*/MaxDPLimit=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^MaxPoint=.*/MaxPoint=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^BasisPoint=.*/BasisPoint=999999/g" /home/data_main/cabal/WorldSvr_*
		sed -i -e "s/^UpdateSpan=.*/UpdateSpan=999999/g" /home/data_main/cabal/WorldSvr_*
	where 999999 is your value for the parameter,
	data_main is your server directory.


========================================================================
[2.2]	About ports
========================================================================
During the creation of the Cabal server, a range of 100 open ports is set for the container.
By default, externally accessible ports of the Cabal server start at 35001.
Each server is allocated a range of 100 ports (for example, 35001-35100). Other ports will be inaccessible from the outside.
If port 35001 is already used by some of the containers, the next range will be used (35101-35200 and so on).
You cannot change the range of open ports after the server has been created. You will need to delete the server and recreate it.
Since you can use the generated backup of your server to create a new server, it won't take long - the same 5-10 minutes.

After you install the update on your server, you may want to change the port for LoginSvr in LoginSvr_01.ini.
The default port is LoginSvr=xxx03. If you look at the list below, you will see that ports xxx04-xxx10 are free.
This is the ideal range for your LoginSvr and I recommend only using this range to avoid confusion and conflicts.

During server creation, your server's IP address and ports for services will be automatically configured in your ini files.

###For experienced users (you can skip directly to the next section).###
If you need specific ports for the Cabal server,
you need to make changes to the file /home/_server_data/sh/scripts/server_create.sh
cabal_port=*****
You can only select a port from the range 30000-40000.

###Important!###
There is no objective reason to change the default port (an attacker will still be able to find out what ports you are using).
However, if you use ports in the range 38000-39000, local ports (for example, DBAgent_01 port)
can become accessible from the outside, which is a critical security threat.
I strongly advise against changing these ranges.

Ports for the following services must be externally accessible:
AgentShop (default = $cabal_port)
ChatNode (default = $cabal_port+1)
LoginSvr (default = $cabal_port+2)
WorldSvr (default = $cabal_port+10)
AgentShop2 (default = $cabal_port+50)
ChatNode2 (default = $cabal_port+51)
WorldSvr2 (default = $cabal_port+60)


========================================================================
[2.3]	Creating a Cabal Server
========================================================================
After you have made all the necessary settings, run the command:
	server_create

During the creation of the server, the following steps will be performed:
	Created server working directory /home/data_main (where main is your server id).
	The mssql container with id sql_main has been created and started.
	The Cabal container with the identifier cabal_main has been created and started.
	Updated Cabal files configuration (IP address, ports, MSSQL user/password, DP, T-points).
	Created and restored from a database backup.
	Link to cron scheduler file added to /etc/cron.d directory

When finished, your server with one main channel and two TG channels is ready to start.
Command to start the server
	cabal_start main
where main is your server's unique ID.

You may notice that autobackup is now disabled. This is done so that you can easily add backups of your database during the setup process. Then you enable autobackup.


========================================================================
[2.4]	Removing the Cabal Server
========================================================================
If you decide to remove an unnecessary or incorrectly configured server, run the command:
	server_remove main
where main is your server's unique ID.
You will be prompted to create a fresh database backup in case you want to restore this server later.
If you are sure that you do not need to update the backup of this database, enter N.
Then a backup of all server files and databases will be created.
The database backups of the latest version will be saved in any case, regardless of whether you answered the question about a fresh backup.
The backup will be saved in the /home/_server_backups/removed_servers directory.
Based on this backup, you can also create a new server.


========================================================================
[3.0]	Adding/Setting Channels
========================================================================
By default, channels 1 (regular) and 15,16 (TG) are added.
Also added a channel for tests - 11.
To add a channel, add the service name (WorldSvr_XX_XX) to the structure files:
	/home/data_main/cabal_structure/channels_list (list of main channels if you are adding a regular channel)
	/home/data_main/cabal_structure/server_list (list of all server services)
	/home/data_main/cabal_structure/world_list (list of server services that are constantly running)
	/home/data_main/cabal_structure/war_list (list of TG channels if you are adding a TG channel)
	
	/home/data_main/cabal/GlobalMgrSvr.ini
Available channel types in GlobalMgrSvr.ini:
1024 = Trade (green).
0 = Regular (green).
1 = PK (white).
4 = Premium (green).
5 = Premium PK (white).
8 = War.
12 = Premium War.
32 = Admin channel (add the admin's IP address to the AffiliatedCorpIP field in the LoginSvr.ini file. The list of IP addresses is separated by ";").
16781392 = War of Nations (Warmap 1). Default for levels 52-79.
33558608 = War of Nations (Warmap 2). Default for levels 80-109.
50335824 = War of Nations (Warmap 3). Default for levels 110-139.
67113040 = War of Nations (Warmap 4). Default for levels 140-169.
83890256 = War of Nations (Warmap 5). Default for levels 170-190.

If necessary, make changes to the WorldSvr_XX_XX.ini files.
WorldSvr_XX_XX.ini files are added for channels 1-16, but you can add additional configs for channels 17+.
Without additional changes in the service settings (see paragraph [6.0]), it is possible to add channels 1-30.

After applying all the settings, restart the server:
	cabal_restart main


========================================================================
[3.1]	Setting up the cron scheduler
========================================================================
The crontab configuration file is located in the /home/cabal_structure directory.
You can also open this file using a link to it in the /etc/cron.d directory (the file name is cabal_main_cron there).
You can uncomment or comment out lines using the # symbol.
The first line contains your server id - do not edit this line. It is needed for automation.
Available schedules:
	Schedule of war of nations.
	Setting the parameters of the battle for the flag. Performed 5 minutes before the start of the war.
	Setting the default parameters of the war. Runs 5 minutes after the end of the battle for the flag.
	Setting the nation's weekly reward based on the results of the battle for the flag. Runs 10 minutes after the end of the battle for the flag.
	Auto restart GlobalMgrSvr. Preventing channel failures caused by stopping GlobalMgrSvr. Runs daily at 3:35 AM.
	Log rotation. Runs every minute. You can specify the maximum log size in megabytes.
	Trash cleanup (.core, .trc). Runs every 5 minutes.
	Compressing the database logs if the Server01 log size has reached the set limit of 10 GB. Runs every day at 4:45 am.
	Checking the status of Cabal services and restarting them if they fail*. Runs every minute.
		* This is a redundant system and I need more testing to see if it is needed in the current server configuration.
	Autobackup. Runs 2 times a month, 2 times a day and every hour. Backups are stored in the /home/_server_backups directory.

If necessary, you can add a start/stop schedule for event channels:
#### Forcecalibur
00 16 * * 7 root /bin/bash /usr/bin/chan 6 main restart -dt
00 17 * * 7 root /bin/bash /usr/bin/chan 6 main stop -dt

Note that the last line in the cron file must be empty.
In the code above, channel 6 will start every Sunday at 16:00 and stop at 17:00.
See [4.0] for details on the "chan" command.


========================================================================
[3.2]	Customizing INI Files
========================================================================
The INI files for the Cabal server are located in the /home/data_main/cabal directory.
The IP address and ports are set automatically during server creation.
Also, before creating the server, you can set the configuration for the DP and T-points.

###Important!###
Some functionality of this build depends on the structure of INI files.
Do not replace them with your old files! Make changes to existing files.
The performance settings are already set to optimal values.
You can replace the Common.ini file.


========================================================================
[3.3]	Binaries
========================================================================
The binaries for the Cabal server are located in the /home/data_main/cabal_bin directory.
You can replace them with your own binaries. To do this, just move them to this directory.

Note that if you deleted an existing file from the server before replacing (or renamed it),
then you need to re-set the permissions for that file. This can be done by running the command in the terminal:
	chmod 0700 /home/data_main/cabal_bin/WorldSvr
where WorldSvr is your binary.
Or you can do it from WinSCP.
Right click on the file, select "Properties", enter 0700 in the "Octal" field.


========================================================================
[3.4]	Configuring MSSQL Database
========================================================================
The following operations are automated for the database:
	Database creation
	Restoring a database from backups
	Database backup
	Reset online list (SET [Login]=0)
	Application of the weekly reward based on the results of the Battle for the Flag
	Compressing database logs
All these actions are fully automated.
If you are creating a server for the first time, only the default databases for episode 8 will be created.
If you want to add an additional database, after creating the server, run the command:
	cabal_db create main AnderSystems
where main is your server ID and AnderSystems is your db name.

Please note that the name of the backup file for the database is case sensitive.
For example, the NetcafeBilling database:
Netcafebilling.bak is wrong
NetcafeBilling.BAK is wrong
NetcafeBilling.bak is correct
	
Backups of your databases are stored in the directory /home/data_main/mssql/backup
The /home/data_main/mssql/prev_backups directory contains previous database backups copied there before the current backup.

After you have created a server and added all the necessary databases, you can restore your databases from your backups.
To do this, add the backup files to the /home/data_main/mssql/backup directory.
Remember that the file name must exactly match the name of the database (including lowercase and uppercase letters).
The list of your databases is stored in the file /home/data_main/cabal_structure/db_list (no need to edit this file).
After you have prepared backups, run the command:
	restore_dbs main
where main is your server ID.

When the database restore is complete, you can enable autobackup:
	autobackup main on


========================================================================
[3.5]	Important information about database recovery
========================================================================
When setting up the cron scheduler, you may have noticed that an automatic backup is performed at the end of the hour.

###Important!###
While the database is being backed up, you cannot restore the database from the backup!
This action will break your database. In this case, you need to delete the problematic database, create it again and restore it from a backup.
To avoid this problem, do not attempt to restore a database from a backup within the last 15 minutes of an hour.
You can also disable autobackup by commenting out the appropriate lines in crontab, but for obvious reasons this is not recommended.
Let me remind you that by default, backups are created every hour, and you can take a backup to restore from the /home/_server_backups/hourly directory.


========================================================================
[3.6]	GlobalMgrSvr Proxy
========================================================================
This function is necessary if you want to use different files
(and maybe directories for them) Item.scp, Mobs.scp, Warp.scp.
For example, you want to make a hardcore channel with enhanced mobs.
The files described above cannot be changed in Common.ini, so a proxy comes to our aid.

First you need to make settings in the file /home/data_main/cabal_structure/proxy_list
Here you can specify specific ports for GlobalMgrSvr.
You can use the same port for multiple channels (for example, the same port for all TG channels).
The recommended range is 23001-23100.
In the remaining columns, enter special filenames.
Set this custom port in the WorldSvr_XX_XX.ini file under the [GlobalMgrSvr] section.
For example:
[ProxyId]	gmsPort	Item	Mobs	Warp
1	23001	Data/ItemNew.scp	Data/MobsNew.scp	Data/WarpNew.scp
2	23002	Data/ItemA.scp	Data/MobsA.scp	Data/WarpA.scp
3	23003	Data/ItemB.scp	Data/MobsB.scp	Data/WarpB.scp
4	23004	Data/ItemC.scp	Data/MobsC.scp	Data/WarpC.scp
5	23005	Data/ItemD.scp	Data/MobsD.scp	Data/WarpD.scp
6	23006	Data/ItemE.scp	Data/MobsE.scp	Data/WarpE.scp
7	23007	Data/ItemF.scp	Data/MobsF.scp	Data/WarpF.scp
8	23008	Data/ItemG.scp	Data/MobsG.scp	Data/WarpG.scp
9	23009	Data/ItemH.scp	Data/MobsH.scp	Data/WarpH.scp
10	23010	Data/ItemI.scp	Data/MobsI.scp	Data/WarpI.scp

WorldSvr_01_01.ini (default):
    [GlobalMgrSvr]
    Port=23991
    Addr=127.0.0.1

WorldSvr_01_04.ini (special 1):
    [GlobalMgrSvr]
    Port=23001
    Addr=127.0.0.1

WorldSvr_01_05.ini (special 1):
    [GlobalMgrSvr]
    Port=23001
    Addr=127.0.0.1

WorldSvr_01_16.ini (special 2):
    [GlobalMgrSvr]
    Port=23002
    Addr=127.0.0.1

To apply these settings, run the command
	gms_proxy_reexec main
Then restart the channels or the server.


========================================================================
[4.0]	Available terminal commands
========================================================================
For commands intended to manage Cabal services, you need to add the server ID.
For example:
	cabal_start main
where main is your server ID.

Management of all Cabal services.
List of services for status/stop in /home/data_main/cabal_structure/server_list file
List of services to start in the file /home/data_main/cabal_structure/world_list
	cabal_start|cabal_stop|cabal_restart|cabal_reload|cabal_status

Main channel management.
List of channels in the /home/data_main/cabal_structure/channels_list file
	channels_start|channels_stop|channels_restart|channels_reload|channels_status

Management of the channels of war.
List of channels in the /home/data_main/cabal_structure/war_list file
	war_start|war_stop|war_restart|war_reload|war_status

Admin channel management.
List of channels in the file /home/data_main/cabal_structure/tech_channel
	tech_start|tech_stop|tech_restart|tech_reload|tech_status

Individual channel management.
	chan 1 main start|stop|restart|reload

Management of the LoginSvr_01 service. Allows you to restart the service when you need to change the Client version and Magickey.
	login_start|login_stop|login_restart|login_reload|login_status

Managing the EventMgrSvr service. Allows you to restart the service to update the event configuration, event shops, etc.
	eventmgr_start|eventmgr_stop|eventmgr_restart|eventmgr_reload|eventmgr_status

Managing the AgentShop_01 service. Allows you to restart the service to update the auction configuration.
	ashop_start|ashop_stop|ashop_restart|ashop_reload|ashop_status

Creating a backup. Scripts, all Cabal configuration files, a fresh database backup will be saved.
The backup will be saved in the /home/_server_backups/manual directory
Creating a backup of a specific server.
	create_backup main
Creation of a complete backup, including the files of all available servers.
	create_backup -f
	
Database backup. Backup files in the /home/data_main/mssql/backup directory will be overwritten.
You can add a backup script for your custom database there.
The archive with database backups will be saved in the /home/_server_backups directory
	backup_dbs main
The -s parameter cancels saving the archive with backups.
Backups will only be stored in the /home/data_main/mssql/backup directory
	backup_dbs main -s

Creates databases for the Cabal server.
	create_dbs main
The list of databases will be obtained from the file /home/data_main/cabal_structure/db_list.
If the db_list file does not exist, databases will be created from a list of files in the /home/data_main/mssql/backup directory.

Restores databases from backups in the /home/data_main/mssql/backup directory
!!!Important!!! See paragraph [3.5]!
	restore_dbs main

Single database management.
	cabal_db create|remove|restore|backup|shrink Server_id DB_name
For example
	cabal_db create main Cabalist

Setting the IP address in WorldSvr_XX_XX. The IP address will be replaced for all servers.
	world_set_ip 1.1.1.1

Changes MSSQL user and password in *DBAgent*.ini files.
DOES NOT CHANGE the user/password in the database! Use SSMS for this.
	set_sql_access main SA PWD

Set default/flag war settings from configs in /home/data_main/cabal_war directory
Usually done on a schedule.
	set_war_default main
	set_war_flag main

Creates a new Cabal server. See paragraph [2.3]. Settings in /home/_server_data/new_server.conf file
	server_create

Deletes the main server. See paragraph [2.4]. In the process, a backup of this server will be created.
	server_remove main

Restarts GMS proxy services with new settings. See paragraph [3.6].
	gms_proxy_reexec

Compresses database logs.
Usually done automatically.
	shrink_dbs main

Autobackup setup
	autobackup main on|off

Opens the Server Process and Load Manager.
	htop

File manager in case of lack of access to WinSCP.
	mc

Free disk space check.
	df -h


========================================================================
[4.1]	Docker Commands
========================================================================
Container management.
	docker start|stop|restart sql_test|sql_main
	docker start|stop|restart cabal_test|cabal_main
	
For example, docker restart cabal_main

For each Cabal server, 2 containers are created - SQL and CABAL (for example, sql_main and cabal_main).
Restarting the container is equivalent to a full system reboot if you were using a regular server.
The sql container must always be started BEFORE starting the cabal container.
If the sql container is stopped, the cabal container will not start.

Container status.
	docker ps -a

Size of containers on disk.
	docker ps -s

Resource usage.
	docker stats


========================================================================
[4.2]	"The same process name is already existed" error
========================================================================
This error sometimes appears in the channel log after a critical failure.
Now, to restore the channel, you do not need to do a full reboot.
It is enough to restart the cabal container.
	docker restart cabal_main


========================================================================
[5.0]	Sending a backup to an external server via FTP
========================================================================
If you have a server for backups, you need to fill in the file /home/_server_data/ftp.conf
Backups will automatically be sent to your backup server.


========================================================================
[5.1]	Sending a backup to the MEGA folder
========================================================================
MEGA is an affordable free way to keep your backups safe in case of force majeure.
Especially if you have been registered there for a long time and have 50 GB of disk space on your account.

Setting up file synchronization with MEGA is done in 3 simple steps.
1. Create a folder where your backups will be stored in your MEGA account.
2. Log in to the terminal using your MEGA credentials
	mega-login example@gmail.com 'Your-Mega-Password'
Then clear your terminal history so no one sees your password.
	history -c
Keep in mind that after each reboot of the system, you will need to log in again to enable synchronization.
3. Enable synchronization for the /home/_server_backups directory
	mega-sync /home/_server_backups/ /YourMegaFolderName/

I also recommend checking Settings -> File Management -> File Versions.
Saving many old versions of files can significantly increase the amount of free space in MEGA.
Use whatever settings you find optimal, depending on the size of your backups and the available space on MEGA.


========================================================================
[5.2]	Web server for launcher
========================================================================
You may want to host your launcher updates on the server.
To do this, you need to install the Apache2 web server.
For this, the webserver command is provided.

Web server installation.
	webserver install

Adding a domain
	webserver add launcher.testdomain.com
where launcher.testdomain.com is the domain for your launcher.
I recommend always using a subdomain for the launcher (launcher.testdomain.com),
not the first level domain (testdomain.com).
Once the domain has been added, you can add the launcher files to the /home/web_domains/launcher.testdomain.com/html directory
###Important!!!###
Backup of domain files is not performed due to the possible large volume of files!
Keep copies of the launcher files on your PC!

Deleting a domain
	webserver remove launcher.testdomain.com
The directory /home/web_domains/launcher.testdomain.com will be deleted!
Don't forget to save your important files!

Webserver management.
	webserver start|stop|restart|reload|status

Autostart web server after reboot.
	webserver enable|disable

Removing the web server.
	webserver uninstall


========================================================================
[6.0]	Working with Cabal Services
========================================================================
Cabal server services configuration files are located in /home/data_main/cabal_scripts/cabal_services directory
Cabal_common.conf file - settings for the main server services
File cabal_proxy.conf - settings for GMS Proxy services
The cabal_server*.conf files are settings for services that can run under different numbers (channels, ChatNode, etc.).

The presence of the cabal_server* configurations implies that you can set up a multi-server here.
But I do not provide support for multiserver functionality, you can try to do it yourself.
See paragraph [6.2].

[program:DBAgent_01]									-	Service name
directory=/etc/cabal_etc/core/							-	Working directory
command=/bin/bash -c 'exec /usr/bin/DBAgent_01 -l -c'	-	Service start command
user=root												-	The user under which the service will run
autostart=false											-	Autostart on container startup.
															This feature requires additional settings. Leave false.
autorestart=unexpected									-	Service auto-restart after failure.
startsecs=3												-	The time to wait for the service to start.
															If the service has not started during this time, a restart will be attempted.
You can also add:
startretries=3											-	The number of restart attempts. The default is 3.

After changing these settings, you need to restart the cabal container:
	docker restart cabal_main


========================================================================
[6.1]	odbc.ini
========================================================================
The odbc files are located in the /home/data_main/cabal_scripts/odbc directory
The port in these configs should always be 1433!
In most cases, you don't need to change anything there.


========================================================================
[6.2]	About multiservers
========================================================================
Multiserver is a server that allows you to connect to multiple Cabal servers through a single client
(server selection menu, Mercury/Venus).

This system has partial support for multiservers.
This means that there are some tools for this, but you can use them at your own risk.
I will not add anything extra, give clarifications, solve problems related to multiservers.

So what can be done about it.
If you want to create a multiserver, you should read the related posts on RageZone to understand what I'm talking about.
The first 50 ports out of 100 available are used for the core services and services of the first server.
You can use the next 50 ports for the second server (see paragraph [2.2]).
You also need to add the appropriate INI files to /home/data_main/cabal
The configuration for the services of the second server has already been created, but you can check/edit the configs (see paragraph [6.0]).
In order to manage the services of only one particular server, you need to add that server's number to the command.
For example
	channels_restart main 2
will restart the channels of the second server only.
This feature has been added for most of the existing commands.
The server ID is determined by the service name (for example, AgentShop_02, WorldSvr_02_01)

In addition, you will need to check and edit the scripts in the directories
	/home/_server_data/sql
given that you have additional databases.

Once again I remind you that I do not provide any support for multiservers.
